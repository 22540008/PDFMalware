# feature_extraction.py
import fitz
import os
import pandas as pd

def extract_features_and_text(pdf_path, selected_page_count):
    res = pd.DataFrame(columns=('pdfsize', 'metadata size', 'pages', 'xref length', 'title characters', 'isEncrypted', 'embedded files', 'images', 'contains text'))

    i = 0

    try:
        doc = fitz.open(pdf_path)
    except:
        print("Error opening PDF:", pdf_path)
        # Handle the error appropriately
        return res, None

    metadata = doc.metadata
    isEncrypted = 0

    if metadata:
        title = metadata.get('title', '')
        isEncrypted = metadata['encryption']
        if not isEncrypted:
            isEncrypted = 0
        else:
            isEncrypted = 1

    objects = doc.xref_length()
    numPages = doc.page_count
    pdfsize = int(os.path.getsize(pdf_path) / 1000)

    found = "No"
    text = ""

    try:
        for page_number in range(min(selected_page_count, doc.page_count)):
            page = doc[page_number]
            text += page.get_text()
            if len(text) > 100:
                found = "Yes"
                break
    except:
        found = "unclear"
        res.loc[i] = [pdfsize, len(str(metadata).encode('utf-8'))] + [numPages] + [objects] + [len(title)] + [isEncrypted] + [-1] + [-1] + [found]
        doc.close()
        return res, None

    embedcount = 0
    try:
        embedcount = doc.embfile_count()
    except Exception as e:
        print("Error processing PDF:", pdf_path)
        print("Error details:", str(e))
        embedcount = -1

    imgcount = 0
    try:
        for k in range(len(doc)):
            page = doc[k]
            image_list = page.get_images()
            imgcount += len(image_list)
    except Exception as e:
        imgcount = -1

    res.loc[i] = [pdfsize, len(str(metadata).encode('utf-8'))] + [numPages] + [objects] + [len(title)] + [isEncrypted] + [embedcount] + [imgcount] + [found]

    doc.close()
    return res, extract_features(res)

def extract_features(df):
    # Assuming you want to return features based on the DataFrame
    # Modify this function as needed
    # For now, return a subset of the DataFrame
    return df[['pdfsize', 'metadata size', 'pages', 'xref length', 'title characters', 'isEncrypted', 'embedded files', 'images']]
