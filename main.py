# main.py

import streamlit as st
import os
import fitz
from feature_extraction import extract_features_and_text

st.sidebar.header('User Input Features')
uploaded_file = st.sidebar.file_uploader("Upload your input PDF file", type=["pdf"])
selected_page_count = st.sidebar.slider("Select number of pages to display", min_value=1, max_value=20, value=5)

# Variable to check if the PDF data has been loaded
pdf_data_loaded = False

def save_uploaded_file(uploaded_file):
    # Ensure the 'temp' directory exists
    temp_dir = "temp"
    os.makedirs(temp_dir, exist_ok=True)

    # Save the uploaded file to a temporary location
    pdf_path = os.path.join(temp_dir, uploaded_file.name)
    with open(pdf_path, "wb") as f:
        f.write(uploaded_file.read())  # Use read() instead of getvalue()
    return pdf_path

def main():
    global pdf_data_loaded  # Use the global variable

    st.title("PDF Analysis App")
    uploaded_file = st.file_uploader("Upload a PDF file", type=["pdf"])
    if uploaded_file is not None:
        # Check if the PDF data has been loaded
        if not pdf_data_loaded:
            # Load the PDF content including metadata, text, and features
            pdf_path = save_uploaded_file(uploaded_file)
            pdf_info, features = extract_features_and_text(pdf_path, selected_page_count)
            pdf_data_loaded = True

        # Display the extracted text and metadata
        if pdf_info is not None:
            st.text("PDF Metadata:")

            # Print column names to inspect the structure of the DataFrame
            st.text(pdf_info.keys())

            # Assuming 'metadata' is present in pdf_info
            if 'metadata' in pdf_info:
                st.json(pdf_info["metadata"])
            else:
                st.text("No 'metadata' found in pdf_info.")

            st.text("Extracted Text:")
            for page_text in pdf_info["pages"]:
                st.text(page_text)

        # Display the extracted features
        if features is not None:
            st.text("Extracted Features:")
            st.dataframe(features)

if __name__ == "__main__":
    main()
